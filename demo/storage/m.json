{
  "connector.class": "org.apache.kafka.connect.mirror.MirrorSourceConnector",

  "tasks.max": "1",

  "topics": "json",

  "checkpoints.topic.replication.factor": 3,
  "replication.factor": 3,
  "heartbeats.topic.replication.factor": 3,
  "offset-syncs.topic.replication.factor": 3,

  "refresh.topics.interval.seconds": 60,

  "sync.topic.acls.enabled": false,
  "sync.topic.configs.enabled": true,
  "sync.topic.configs.interval.seconds": 60,

  "key.converter": "org.apache.kafka.connect.converters.ByteArrayConverter",
  "value.converter": "org.apache.kafka.connect.json.JsonConverter",
  "value.converter.schemas.enable": false,
  "_value.converter": "org.apache.kafka.connect.converters.ByteArrayConverter",

  "source.cluster.alias": "src",
  "source.cluster.bootstrap.servers": "broker-1:9092",

  "target.cluster.alias": "dest",
  "target.cluster.bootstrap.servers": "broker-1:9092",

  "_replication.policy.class" : "",

  "src->dest.enabled" : "true",


    "_comment": "--- SMT (Single Message Transform) ---",
    "transforms": "setSchemaName, extractId",

    "_comment": "--- Change the schema name ---",
    "transforms.setSchemaName.type": "org.apache.kafka.connect.transforms.SetSchemaMetadata$Value",
    "transforms.setSchemaName.schema.name": "com.mycompany.commons.storeapp.events.Order",

    "_comment": "--- Drop fields ---",
    "transforms.dropFields.type": "org.apache.kafka.connect.transforms.ReplaceField$Value",
    "transforms.dropFields.blacklist": "updated_at",

    "_comment": "--- Add key to the message based on the entity id field ---",
    "transforms.createKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
    "transforms.createKey.fields": "id",

    "transforms.extractId.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractId.field": "id"

}
